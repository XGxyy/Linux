操作系统(一个软件): 系统内核 + 外部应用(封装操作接口)
	定位: 搞管理的软件--管理着计算机上的软硬件资源
	管理体系:先描述再组织进行管理.
	库函数和系统调用接口的关系:库函数封装了系统调用接口
	
进程概念: 
	什么是进程?---(运行中的程序)
	在操作系统中的进程: (CPU的分时机制(时间片))
		进程就是一个PCB(进程控制块), 是一个描述程序信息,通过描述
		信息中的内存指针能够找到内存中运行的程序代码以及数据,并
		且通过上下文数据可以保存程序调度切换时正在处理的数据,以及
		通过程序计数器保存进程切换时程序及将执行的下一步指令,等等
		通过这些描述信息实现控制一个程序的运行,因此对于操作系统而言
		进程就是PCB.
	CPU的分时机制(时间片)--进程在操作系统中是调度切换运行的,每个进程都
		有一个CPU时间片(一个进程在CPU上的运行时间段)
进程查看:
	/proc 进程运行信息存放目录
	ps -ef -aux 查看系统上的进程信息
	getpid() 获取调用进程的进程ID
进程状态: 
	运行/就绪/阻塞
创建进程(fork())
linux下进程状态：
	运行状态R(正在运行的以及只要拿到时间片就能运行的)
	可中断休眠状态S
	不可中断休眠状态D
	停止状态T
	僵死状态Z
僵死态:
	僵尸进程--处于僵死态的进程--进程已近退出,但是资源没有完全释放
僵尸进程的产生原因: 
	子进程先于父进程退出, 退出后, 为了保存自身的退出原因(返回值), 因
	此资源没有完全释放,操作系统这时会通知父进程获取子进程的退出状
	态,并允许操作系统释放资源, 但是如果父进程没有关注这个退出状态则
	子进程虽然推出了,但是资源没有完全释放,处于僵死状态,成为僵尸进程.
僵尸进程的危害: 资源泄露
孤儿进程(后台进程"s"):
	父进程先于子进程退出, 子进程成为孤儿进程("s+"是前台进程),并且被
	1号init进程收养.
***"守护进程/精灵进程---课后自学"***
进程优先级: 决定一个进程CPU调度优先权的级别
	批处理程序(低)/交互式程序(高)---为了让操作系统更好的运行并使用
	cpu密集型程序/io密集型程序
环境变量: 用于存储系统运行环境参数的变量---使得系统的参数配置更加灵活
操作命令:
	env: 查看所有环境变量
	echo: 打印指定环境变量的内容
	set: 查看shell中所有的变量信息
	export: 设置一个环境变量
	unset: 删除一个变量
代码中对环境变量的操作:
	1. main函数的第三个参数---其中保存了所有的环境变量
	2. extern char** environ;全局变量(外部引用而来)
	3.char* getenv(const char* name);--通过环境变量名称获取其内容













	











